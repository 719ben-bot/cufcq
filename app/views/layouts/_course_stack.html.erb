<% @course.grade_query  %>


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="http://code.highcharts.com/highcharts.js"></script>

<script type="text/javascript">
  var enrollment;
    ready = function() {
    var chart = new Highcharts.Chart({
      title: 
      {
        text: null
        },
        colors: ['#2c7bb6', '#abd9e9', '#ffffbf', '#fdae61', '#d7191c', '#666666'],
      chart: { 
        type: 'area',
        renderTo: 'stacked' 
        },
        legend: {
            enabled: true
        },
        xAxis: {
            tickPositions: [],
            type: 'category',
            categories: []
        },
        yAxis: {
          max: 1,
          min: 0,
          title: {
            text: null
            }
        },
      tooltip: {
        shared: true,
        valueSuffix: ' students',
        formatter: function () {
          var n = this.x%10;
          var y = Math.floor(this.x/10);
          var s = n == 1 ? "Spring " : n==4 ? "Summer " : n==7 ? "Fall " : "Error ";
          var parsed = s+y+" : "+ this.y;
          // return (this.y >= 1.0) ? parsed : parsed;
          var date = "<b>"+s+y+" :</b><br/>";

          var av = this.points[0].point.y

        
          var aa = this.points[0].visible ? '' : '<span style="color:#2c7bb6">A Grades: </span>' + Math.floor((this.points[0].point.y * 100)) + '%<br/>';
          var bb = this.points[1].visible ? '' : '<span style="color:#abd9e9">B Grades: </span>' + Math.floor((this.points[1].point.y * 100)) + '%<br/>';
          var cc = this.points[2].visible ? '' : '<span style="color:#ffffbf">C Grades: </span>' + Math.floor((this.points[2].point.y * 100)) + '%<br/>';
          var dd = this.points[3].visible ? '' : '<span style="color:#fdae61">D Grades: </span>' + Math.floor((this.points[3].point.y * 100)) + '%<br/>';
          var ff = this.points[4].visible ? '' : '<span style="color:#d7191c">F Grades: </span>' + Math.floor((this.points[4].point.y * 100)) + '%<br/>';
          var ii = this.points[5].visible ? '' : '<span style="color:#666666">Incompletes: </span>' + Math.floor((this.points[5].point.y * 100)) + '%';

          return date + aa + bb +cc + dd + ff + ii;

      }
    },
    exporting: {
        buttons: {
            contextButtons: {
                enabled: false,
                menuItems: null
            }
        },
        enabled: true
    },
    plotOptions: {
            area: {
                stacking: 'normal',
                lineColor: '#666666',
                lineWidth: 1,
                marker: {
                    lineWidth: 1,
                    lineColor: '#666666'
                }
            }
        },
    series: [
    {
        data: <%= @course.pct_a_data %>,
        name: "Percentage A Grade"
    },
    {
        data: <%= @course.pct_b_data %>,
        name: "Percentage B Grade"
    },
    {
        data: <%= @course.pct_c_data %>,
        name: "Percentage C Grade"
    },
    {
        data: <%= @course.pct_d_data %>,
        name: "Percentage D Grade"
    },
    {
        data: <%= @course.pct_f_data %>,
        name: "Percentage F Grade"
    },
    {
        data: <%= @course.pct_i_data %>,
        name: "Percentage Incomplete"
    }
    ]
    });




// // the button action
//     //var chart = $(container).highcharts(),
//         $overall = $(overall);
//     $overall.click(function() {
//         var series = chart.series[0];
//         if (series.visible) {
//             series.hide();
//             // $overall.html('Show series');
//         } else {
//             series.show();
//             // $overall.html('Hide series');
//         }
//     });

//     // the button action
//     //var chart = $(container).highcharts(),
//         $challenge = $(challenge);
//     $challenge.click(function() {
//         var series = chart.series[1];
//         if (series.visible) {
//             series.hide();
//             // $challenge.html('Show series');
//         } else {
//             series.show();
//             // $challenge.html('Hide series');
//         }
//     });

//         // the button action
//     //var chart = $(container).highcharts(),
//         $priorinterest = $(priorinterest);
//     $priorinterest.click(function() {
//         var series = chart.series[2];
//         if (series.visible) {
//             series.hide();
//             // $priorinterest.html('Show series');
//         } else {
//             series.show();
//             // $priorinterest.html('Hide series');
//         }
//     });


//             // the button action
//     //var chart = $(container).highcharts(),
//         $howmuchlearned = $(howmuchlearned);
//     $howmuchlearned.click(function() {
//         var series = chart.series[3];
//         if (series.visible) {
//             series.hide();
//             // $howmuchlearned.html('Show series');
//         } else {
//             series.show();
//             // $howmuchlearned.html('Hide series');
//         }
//     });





  };

$(document).ready(ready);
$(document).on('page:load', ready);
$(document).on('page:change', ready);
</script>
<div id="stacked" style="height: 300px"></div>